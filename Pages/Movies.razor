@page "/movies"
@using radzen.Services
@inject MovieService MovieService
@using radzen.Models

<h3>Movies</h3>

@if (movies == null)
{
    <p><em>Loading...</em></p>
}
else if (movies.Count == 0)
{
    <p>No movies available.</p>
}
else
{
    <div class="movie-cards">
        @foreach (var movie in movies)
        {
            
            <div class="movie-card">
                <RadzenCard Style="margin: 10px; padding: 20px; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); width: 100%;text-align:center;">
                    <RadzenHeading Size="4">@movie.Title</RadzenHeading>
                    <h2> @movie.Title </h2>
                    <img Style="width: 300px; height:200px; margin:10px;" src="@movie.CoverImage" />
                    <p><strong>Genre:</strong> @movie.Genre</p>
                    <p><strong>Description:</strong> @movie.Description</p>
                    <RadzenButton Text="Details" Click="() => ShowDetails(movie.Id)" Style="margin-top: 10px;" ButtonStyle="ButtonStyle.Primary" />
                </RadzenCard>
            </div>
        }
    </div>
}

@code {
    private List<Movie> movies;

    protected override async Task OnInitializedAsync()
    {
        movies = await MovieService.GetMoviesAsync();
        Console.WriteLine($"Number of movies returned: {movies?.Count ?? 0}");
StateHasChanged();
    }

    private void ShowDetails(int movieId)
    {
        // Logic to handle movie details, e.g., navigate to a details page or show a modal
    }
}
